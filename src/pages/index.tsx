import React from "react";
import { ThemeProvider, createGlobalStyle } from "styled-components";
import { useRecoilState } from "recoil";

import Head from "next/head";
import styles from "@/styles/Home.module.css";
import UserForm from "../components/userForm/UserForm";
import { themeMode } from "../recoil/recoilState";
import { lightTheme, darkTheme } from "../styles/themes";
import { ThemeModeDiv, ThemeModeButton, StyledSvg } from "../styles/indexStyled";

interface DefaultTheme {
  background: string;
}

const GlobalStyles = createGlobalStyle<{ theme: DefaultTheme }>`
  body {
    background-color: ${(props) => props.theme.background};
  }
`;

export default function Home() {
  const [theme, setTheme] = useRecoilState(themeMode);
  const isDarkMode = theme === "dark";

  const toggleTheme = () => {
    setTheme(isDarkMode ? "light" : "dark");
  };

  return (
    <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>
      <GlobalStyles />
      <Head>
        <title>Kruso</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <ThemeModeDiv>
          <ThemeModeButton type="button" onClick={toggleTheme}>
            {isDarkMode ? (
              <StyledSvg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z"
                />
              </StyledSvg>
            ) : (
              <StyledSvg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
              >
                <path
                  fillRule="evenodd"
                  d="M9.528 1.718a.75.75 0 01.162.819A8.97 8.97 0 009 6a9 9 0 009 9 8.97 8.97 0 003.463-.69.75.75 0 01.981.98 10.503 10.503 0 01-9.694 6.46c-5.799 0-10.5-4.701-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 01.818.162z"
                  clipRule="evenodd"
                />
              </StyledSvg>
            )}
          </ThemeModeButton>
        </ThemeModeDiv>
        <UserForm />
      </main>
    </ThemeProvider>
  );
}
